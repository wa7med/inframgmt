---
- name: Install python3-pip and wget
  package:
    name:
      - python3-pip
      - wget
    state: present

- name: Install PyYAML
  pip:
    name: PyYAML

- name: Install k3s
  shell: curl -fsSL https://get.k3s.io | sh -
  args:
    creates: /usr/local/bin/k3s

- name: Copy RBAC setup script
  template:
    src: rbac_k3s_setup_normal_user.sh.j2
    dest: /tmp/rbac_k3s_setup_normal_user.sh
    mode: '0755'

- name: Wait for system stabilization
  wait_for:
    timeout: 10

- name: Run RBAC setup script
  command: bash /tmp/rbac_k3s_setup_normal_user.sh

- name: Check if user exists
  command: getent passwd {{ user_name }}
  register: user_check
  ignore_errors: yes

- name: Debug message for user existence
  debug:
    msg: "The user '{{ user_name }}' exists on the system."
  when: user_check.rc == 0

- name: Debug message for user non-existence
  debug:
    msg: "The user '{{ user_name }}' does not exist on the system."
  when: user_check.rc != 0

- name: Install Helm
  shell: |
    wget https://get.helm.sh/helm-v3.13.1-linux-amd64.tar.gz
    tar -xf helm-v3.13.1-linux-amd64.tar.gz
    mv linux-amd64/helm /usr/local/bin/helm
    helm completion bash >/etc/bash_completion.d/helm
  args:
    creates: /usr/local/bin/helm

- name: Cleanup Helm files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - helm-v3.13.1-linux-amd64.tar.gz
    - linux-amd64

- name: Install k9s for specified user
  shell: |
    mkdir -p /home/{{ user_name }}/k9s
    wget https://github.com/derailed/k9s/releases/download/v0.31.5/k9s_Linux_amd64.tar.gz -O /home/{{ user_name }}/k9s/k9s_Linux_amd64.tar.gz
    tar -zxvf /home/{{ user_name }}/k9s/k9s_Linux_amd64.tar.gz -C /home/{{ user_name }}/k9s
    mv /home/{{ user_name }}/k9s/k9s /usr/local/bin/
  args:
    creates: /usr/local/bin/k9s

- name: Cleanup k9s files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /home/{{ user_name }}/k9s/k9s_Linux_amd64.tar.gz
    - /home/{{ user_name }}/k9s

- name: Export KUBECONFIG for k3s in user's .bashrc
  lineinfile:
    path: /home/{{ user_name }}/.bashrc
    line: 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml'
    create: yes

- name: Source .bashrc to load KUBECONFIG
  shell: source /home/{{ user_name }}/.bashrc
  args:
    executable: /bin/bash

- name: Verify Kubernetes setup
  command: kubectl get nodes
  register: k8s_nodes_output

- debug:
    msg: "{{ k8s_nodes_output.stdout }}"

